name: android-arm64-build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      gadget_version:
        description: "Frida gadget release tag (e.g. 16.3.6)"
        required: false
        default: "16.1.4"

env:
  CARGO_TERM_COLOR: always
  ANDROID_API_LEVEL: 24
  FRIDA_VERSION: 16.1.4

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.inputs.gadget_version == ''

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android

      - name: Install Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d
          add-to-path: false

      - name: Configure Android toolchain env
        run: |
          echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> "$GITHUB_ENV"
          TOOLCHAIN_DIR="${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin"
          echo "AR_aarch64_linux_android=${TOOLCHAIN_DIR}/llvm-ar" >> "$GITHUB_ENV"
          echo "CC_aarch64_linux_android=${TOOLCHAIN_DIR}/aarch64-linux-android${ANDROID_API_LEVEL}-clang" >> "$GITHUB_ENV"
          echo "CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=${TOOLCHAIN_DIR}/aarch64-linux-android${ANDROID_API_LEVEL}-clang" >> "$GITHUB_ENV"

      - name: Build (aarch64-linux-android)
        run: cargo build --release --target aarch64-linux-android --features frida

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: drizzle-dumper-android-arm64
          path: target/aarch64-linux-android/release/drizzle_dumper

  prepare-gadget:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.gadget_version != ''
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Frida gadget
        env:
          VERSION: ${{ github.event.inputs.gadget_version }}
        run: |
          set -euo pipefail
          mkdir -p assets/frida/arm64
          url="https://github.com/frida/frida/releases/download/${VERSION}/frida-gadget-${VERSION}-android-arm64.so.xz"
          echo "Fetching $url"
          curl -L "$url" -o "frida-gadget-${VERSION}-android-arm64.so.xz"
          unxz -f "frida-gadget-${VERSION}-android-arm64.so.xz"
          mv frida-gadget-${VERSION}-android-arm64.so assets/frida/arm64/frida-gadget.so

      - name: Commit updated gadget
        env:
          VERSION: ${{ github.event.inputs.gadget_version }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add assets/frida/arm64/frida-gadget.so
          if git diff --cached --quiet; then
            echo "No gadget changes to commit"
          else
            git commit -m "Update Frida gadget ${VERSION}"
            git push
          fi
      - name: Download FRIDA core devkit
        run: |
          set -euo pipefail
          curl -L "https://github.com/frida/frida/releases/download/${FRIDA_VERSION}/frida-core-devkit-${FRIDA_VERSION}-android-arm64.tar.xz" -o frida-devkit.tar.xz
          mkdir -p "$GITHUB_WORKSPACE/frida-devkit"
          tar -xJf frida-devkit.tar.xz -C "$GITHUB_WORKSPACE/frida-devkit" --strip-components=1
          rm frida-devkit.tar.xz
          echo "FRIDA_CORE_DEVKIT=$GITHUB_WORKSPACE/frida-devkit" >> "$GITHUB_ENV"
          if [ -d "$GITHUB_WORKSPACE/frida-devkit/lib/pkgconfig" ]; then
            echo "PKG_CONFIG_PATH=$GITHUB_WORKSPACE/frida-devkit/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}" >> "$GITHUB_ENV"
          fi
